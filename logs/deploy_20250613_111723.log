[0;32m‚úÖ Found PDF file: random_machine_learing.pdf (5.0M)[0m
[1;33mChecking Minikube status...[0m
[1;33mSetting Docker environment for Minikube...[0m
[1;33mCleaning up existing resources...[0m
deployment.apps "pdf-rag-app" deleted
service "pdf-rag-service" deleted
configmap "pdf-rag-config" deleted
persistentvolumeclaim "training-data-pvc" deleted
persistentvolumeclaim "shared-file-pvc" deleted
[1;33mApplying secrets...[0m
[0;31m‚ö†Ô∏è  Make sure you've updated secrets.yaml with your actual OpenAI API key![0m
secret/openai-secret unchanged
[1;33mCreating ConfigMap for multi-user configuration...[0m
configmap/pdf-rag-config created
[0;32m‚úÖ ConfigMap created successfully[0m
[1;33mBuilding Docker image with embedded PDF and Architecture Version 2...[0m
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.77kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.10-slim
#2 DONE 0.8s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [ 1/13] FROM docker.io/library/python:3.10-slim@sha256:034724ef64585eeb0e82385e9aabcbeabfe5f7cae2c2dcedb1da95114372b6d7
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 27.68kB 0.0s done
#5 DONE 0.0s

#6 [ 5/13] RUN pip install --no-cache-dir -r requirements.txt
#6 CACHED

#7 [11/13] RUN mkdir -p /app/emissions_data /app/training_data     && chmod 755 /app/emissions_data /app/training_data
#7 CACHED

#8 [ 3/13] RUN apt-get update && apt-get install -y     gcc     g++     curl     util-linux     procps     && rm -rf /var/lib/apt/lists/*
#8 CACHED

#9 [ 4/13] COPY requirements.txt .
#9 CACHED

#10 [ 7/13] COPY Chatbot.py .
#10 CACHED

#11 [ 9/13] COPY helper_functions.py .
#11 CACHED

#12 [10/13] COPY .env* ./
#12 CACHED

#13 [12/13] RUN touch /app/training_data.jsonl     && chmod 664 /app/training_data.jsonl
#13 CACHED

#14 [ 2/13] WORKDIR /app
#14 CACHED

#15 [ 6/13] COPY random_machine_learing.pdf /app/random_machine_learing.pdf
#15 CACHED

#16 [ 8/13] COPY Langgraph_Agent.py .
#16 CACHED

#17 [13/13] RUN useradd -m -u 1000 appuser     && chown -R appuser:appuser /app
#17 CACHED

#18 exporting to image
#18 exporting layers done
#18 writing image sha256:93f974c4b207b506eb65e9e0a4e5a2e3b1a59f71a3953fb0852ea20ecb5c201f done
#18 naming to docker.io/library/pdf-rag-app:latest done
#18 DONE 0.0s
[0;32m‚úÖ Docker image built successfully with Architecture Version 2[0m
[1;33mApplying deployment with multi-user support...[0m
deployment.apps/pdf-rag-app created
persistentvolumeclaim/training-data-pvc created
persistentvolumeclaim/shared-file-pvc created
service/pdf-rag-service created
configmap/pdf-rag-config configured
[1;33mWaiting for deployment to be ready...[0m
